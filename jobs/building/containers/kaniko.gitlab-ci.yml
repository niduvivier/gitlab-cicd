---

include: 
  - local: /jobs/utils/supported-os-matrix.gitlab-ci.yml

# This job template can be used to build containers from Dockerfiles using kaniko
#
# KANIKO_COMMAND should contain anything you need:
#   - proxy settings as build-arg's
#   - correct use of $REGISTRY and $REGISTRY_GROUP as required by our nexus setup
#   - --cache (caches intermediate build layers on docker registry, makes next builds faster most of the time)
#   - --reproducible (generates layers and containers with epoch 0 timestamps eg)
#   - build context set to project directory
#
# If any of these settings are not required, or require a different value please read the implementation carefully
# and use as much on the assignment to KANIKO_COMMAND as possible
#
# This job template is meant to be included and extended as part of another job
# eg.:
#  include:
#    - project: automation/cicd/templates
#      ref: ${project latest version}
#      file: jobs/building/containers/kaniko.gitlab-ci.yml
#  stages:
#    - build
#  job1:
#    extends: .kaniko
#    script:
#      - ${KANIKO_COMMAND} --dockerfile Dockerfile --build-arg something=true --destination $REGISTRY/<namespace>/<container_id>:<tag>

.kaniko:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - |-
       mkdir -p /kaniko/.docker
       KANIKOPROXYBUILDARGS=""
       KANIKOCFG="{ \"auths\":{\"$REGISTRY\":{\"username\":\"$NEXUS_USER\",\"password\":\"$NEXUS_PASS\"}}"
       if [ "x${HTTP_PROXY}" != "x" -o "x${HTTPS_PROXY}" != "x" ]; then
         KANIKOCFG="${KANIKOCFG}, \"proxies\": { \"default\": { \"httpProxy\": \"${HTTP_PROXY}\", \"httpsProxy\": \"${HTTPS_PROXY}\", \"noProxy\": \"${NO_PROXY}\"}}"
         KANIKOPROXYBUILDARGS="${KANIKOPROXYBUILDARGS} --build-arg http_proxy=${HTTP_PROXY} --build-arg https_proxy=${HTTPS_PROXY} --build-arg no_proxy=${NO_PROXY}"
       fi
       KANIKOCFG="${KANIKOCFG} }"
       echo "${KANIKOCFG}" > /kaniko/.docker/config.json
       KANIKO_COMMAND="/kaniko/executor --reproducible --insecure --insecure-pull --registry-mirror ${REGISTRY_GROUP} --context ${CI_PROJECT_DIR} ${KANIKOPROXYBUILDARGS} --cache=true"

...
