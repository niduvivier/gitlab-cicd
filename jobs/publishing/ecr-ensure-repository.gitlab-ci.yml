---

include:
  - local: /jobs/utils/aws/aws-assume-role.gitlab-ci.yml

# Use this job template to ensure an ECR repository with correct
# policy.
#
# env
# This job requires the user to include this job template
# This job requires the user to define the deploy stage in his pipeline
# eg:
# include:
#   - project: automation/cicd/templates
#     ref: ${latest project version}
#     file: jobs/publishing/ecr-ensure-repository.gitlab-ci.yml
# stages:
#   - publishing

ecr-ensure-repository:
  image: registry.dev.yelo.inet.telenet.be/enttribe/ansible-aws-cli:1.4.0-ansible9.6.0
  stage: publish
  extends:
    - .aws_assume_role
  variables:
    AWS_ENV: ""
    GIT_CLONE_PARAMS: "--single-branch"
    INFRASTRUCTURE_PATH: "core-backend-platforms/ovp/infrastructure.git"
    ARS_AWS_PROFILE: "$AWS_SHARED_ACCOUNT_NAME"
    ARS_AWS_ROLE_TO_ASSUME: "arn:aws:iam::$AWS_SHARED_ACCOUNT:role/$AWS_ASSUME_ROLE_FOR_ECR_DEPLOY"
  before_script:
    - !reference [.aws_assume_role, before_script]
    - echo $ANSIBLE_VAULT_PASSWORD > ~/.ansible_vault
    - if [ -n "$INFRASTRUCTURE_BRANCH" ]; then
    -   export GIT_CLONE_PARAMS="${GIT_CLONE_PARAMS} --branch ${INFRASTRUCTURE_BRANCH}"
    - fi
    - git clone $GIT_CLONE_PARAMS "http://gitlab-access-token:${INFRASTRUCTURE_ACCESS_TOKEN}@${CI_SERVER_HOST}/${INFRASTRUCTURE_PATH}"
    - cd infrastructure
  script:
    - ./scripts/galaxy_collections.sh
    - ansible-playbook site.yml -t aws-repositories -D --vault-password-file=~/.ansible_vault -e aws_env=$AWS_ENV -e aws_region=$AWS_REGION -e aws_application=$CI_PROJECT_NAME
  needs: []

...
